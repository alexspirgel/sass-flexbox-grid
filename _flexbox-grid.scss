/**
* Sass Flexbox Grid v1.0.2
* https://github.com/alexspirgel/sass-flexbox-grid
*/

@mixin flexbox-grid($options: ()) {

	// ~= Options =~ //

	$default-options: (
		item-selector: '#{&}__item',
		item-align: 'left',
		columns: 1,
		column-gutter: 0px,
		row-gutter: 0px
	);

	$merged-options: map-merge($default-options, $options);

	// Set the merged options values to variables for readability.
	$item-selector: map-get($merged-options, item-selector);
	$item-align: map-get($merged-options, item-align);
	$columns: map-get($merged-options, columns);
	$column-gutter: map-get($merged-options, column-gutter);
	$row-gutter: map-get($merged-options, row-gutter);

	// ~= Container Styles =~ //

	display: flex;
	flex-wrap: wrap;

	// Set the alignment of the items.
	@if $item-align == 'left' {
		justify-content: flex-start;
	}
	@else if $item-align == 'right' {
		justify-content: flex-end;
	}
	@else if $item-align == 'center' {
		justify-content: center;
	}

	// ~= Item Styles =~ //

	#{$item-selector} {

		// Calculate the amount to reduce each column by.
		$item-width-reduction: $column-gutter * ($columns - 1) / $columns;

		flex: 0 0 auto;
		width: calc(100%/#{$columns} - #{$item-width-reduction});
		margin-right: $column-gutter;
		margin-bottom: $row-gutter;

		// ~= Horizontal Gutter =~ //
		// Select all items, matching specificity to allow for multiple instances of flexbox-grid to overwrite each other properly.
		&:nth-child(n) {
			margin-right: $column-gutter;
		}
		// Select the last column of items.
		&:nth-child(#{$columns}n),
		// Select the last item.
		&:last-child {
			margin-right: 0;
		}

		// ~= Vertical Gutter =~ //
		// Select all items, matching specificity to allow for multiple instances of flexbox-grid to overwrite each other properly.
		&:nth-child(n):nth-last-child(n):nth-of-type(n) {
			margin-bottom: $row-gutter;
		}
		// Select the first item of the last row, matching specificity.
		&:nth-child(#{$columns}n + 1):nth-last-child(-n + #{$columns}):nth-of-type(n),
		// Select the items after the first item of the last row.
		&:nth-child(#{$columns}n + 1):nth-last-child(-n + #{$columns}) ~ #{$item-selector} {
			margin-bottom: 0;
		}

	} // End selector: #{$item-selector}

} // End mixin: flexbox-grid