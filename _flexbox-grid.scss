/**
* Sass Flexbox Grid v1.0.0
* https://github.com/alexspirgel/sass-flexbox-grid
*/

@mixin flexbox-grid($options: ()) {

	// ~= Options =~ //

	$default-options: (
		item-selector: '&__item',
		item-align: 'left',
		columns: 2,
		gutter-horizontal: 0px,
		gutter-vertical: 0px
	);

	$merged-options: map-merge($default-options, $options);

	// Set the merged options values to variables for readability.
	$item-selector: map-get($merged-options, item-selector);
	$item-align: map-get($merged-options, item-align);
	$columns: map-get($merged-options, columns);
	$gutter-horizontal: map-get($merged-options, gutter-horizontal);
	$gutter-vertical: map-get($merged-options, gutter-vertical);

	// ~= Container Styles =~ //

	display: flex;
	flex-wrap: wrap;

	// Set the alignment of the items.
	@if $item-align == 'left' {
		justify-content: flex-start;
	}
	@else if $item-align == 'right' {
		justify-content: flex-end;
	}
	@else if $item-align == 'center' {
		justify-content: center;
	}

	// ~= Item Styles =~ //

	#{$item-selector} {

		// Calculate the amount to reduce each column by.
		$item-width-reduction: $gutter-horizontal * ($columns - 1) / $columns;

		flex: 0 0 auto;
		width: calc(100%/#{$columns} - #{$item-width-reduction});
		margin-right: $gutter-horizontal;
		margin-bottom: $gutter-vertical;

		// Horizontal Gutter
		&:nth-child(n) { // Select all items, matching specificity to allow for multiple instances of flexbox-grid to overwrite each other properly.
			margin-right: $gutter-horizontal;
		}
		&:nth-child(#{$columns}n), // Select the last column of items.
		&:last-child { // Select the last item.
			margin-right: 0;
		}

		// Vertical Gutter
		&:nth-child(n):nth-last-child(n):nth-of-type(n) { // Select all items, matching specificity to allow for multiple instances of flexbox-grid to overwrite each other properly.
			margin-bottom: $gutter-vertical;
		}
		&:nth-child(#{$columns}n + 1):nth-last-child(-n + #{$columns}):nth-of-type(n), // Select the first item of the last row, matching specificity.
		&:nth-child(#{$columns}n + 1):nth-last-child(-n + #{$columns}) ~ & { // Select the items after the first item of the last row.
			margin-bottom: 0;
		}

	} // End #{$item-selector}

} // End @mixin flexbox-grid()